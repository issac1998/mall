version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: seckill-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: seckill
      MYSQL_USER: seckill
      MYSQL_PASSWORD: seckill123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - seckill-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: seckill-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - seckill-network

  # etcd服务发现
  etcd:
    image: quay.io/coreos/etcd:v3.5.9
    container_name: seckill-etcd
    restart: always
    ports:
      - "2379:2379"
      - "2380:2380"
    environment:
      ETCD_NAME: etcd0
      ETCD_DATA_DIR: /etcd-data
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: http://localhost:2379
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://localhost:2380
      ETCD_INITIAL_CLUSTER: etcd0=http://localhost:2380
      ETCD_INITIAL_CLUSTER_TOKEN: etcd-cluster-1
      ETCD_INITIAL_CLUSTER_STATE: new
    volumes:
      - etcd_data:/etcd-data
    networks:
      - seckill-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: seckill-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - seckill-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: seckill-grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - seckill-network

  # Jaeger链路追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: seckill-jaeger
    restart: always
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - seckill-network

volumes:
  mysql_data:
  redis_data:
  etcd_data:
  prometheus_data:
  grafana_data:

networks:
  seckill-network:
    driver: bridge